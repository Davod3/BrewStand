syntax = "proto3";

message GetBatchServiceRequest {

    int64 batch_id = 1;

}

message BatchDetailsService {
    int64 batch_id = 1;
    string brew_date = 2;
    string beer_style = 3;
    string location = 4;
    float ph_level = 5;
    float alcohol_content = 6;
    float volume_produced = 7;
    float quality_score = 8;
    float cost = 9;
    float user_score = 10;
    int32 n_users_review = 11;
}

message GetBatchServiceResponse {

    int32 response_code = 1;
    optional BatchDetailsService batch = 2;

    /*

    0 - Success
    1 - Batch not found

    */

}

message GetBatchCostServiceRequest {

    int64 batch_id = 1;

}

message GetBatchCostServiceResponse {

    int32 response_code = 1;
    optional double cost = 2;

    /*

    0 - Success
    1 - Batch not found

    */

}

message GetBatchScoreServiceRequest {

    int64 batch_id = 1;

}

message GetBatchScoreServiceResponse {

    int32 response_code = 1;
    optional double score = 2;

    /*

    0 - Success
    1 - Batch not found

    */

}

message GetBatchUsersReviewServiceRequest {

    int64 batch_id = 1;

}

message GetBatchUsersReviewServiceResponse {

    int32 response_code = 1;
    optional int32 n_users_review = 2;

    /*

    0 - Success
    1 - Batch not found

    */

}

message ValidateItemServiceRequest {

    int64 batch_id = 1;

}

message ValidateItemServiceResponse {

    int32 response_code = 1;

    /*

    0 - Item in database
    1 - Batch not found

    */

}

message UpdateScoreServiceRequest {

    int64 batch_id = 1;
    float new_score = 2;

}

message UpdateScoreServiceResponse {

    int32 response_code = 1;

    /*

    0 - Success
    1 - Batch not found

    */

}

message ValidateOrderServiceRequest {

    int64 batch_id = 1;
    double volume_order = 2;

}

message ValidateOrderServiceResponse {

    int32 response_code = 1;

    /*

    0 - Enough to order
    1 - Batch not found

    */

}

message EmptyMessage {

}

message GetBatchesServiceResponse {

    int32 response_code = 1;
    repeated BatchDetailsService batches = 2;

    /*

    0 - Success
    1 - SQL Error

    */

}

message UpdateVolumeServiceRequest {

    int64 batch_id = 1;
    double volume = 2;

}

message UpdateVolumeServiceResponse {

    int32 response_code = 1;

}

service InventoryService {
    rpc getBatchService (GetBatchServiceRequest) returns (GetBatchServiceResponse);
    rpc getBatchScoreService (GetBatchScoreServiceRequest) returns (GetBatchScoreServiceResponse);
    rpc getBatchCostService (GetBatchCostServiceRequest) returns (GetBatchCostServiceResponse);
    rpc getBatchUsersReviewService (GetBatchUsersReviewServiceRequest) returns (GetBatchUsersReviewServiceResponse);
    rpc validateItemService (ValidateItemServiceRequest) returns (ValidateItemServiceResponse);
    rpc updateScoreService (UpdateScoreServiceRequest) returns (UpdateScoreServiceResponse);
    rpc validateOrderService (ValidateOrderServiceRequest) returns (ValidateOrderServiceResponse);
    rpc getBatchesService (EmptyMessage) returns (GetBatchesServiceResponse);
    rpc updateVolumeService (UpdateVolumeServiceRequest) returns (UpdateVolumeServiceResponse);
}