syntax = "proto3";

// Data structure for storing order details

message OrderDetails {
    string order_id = 1;
    string user_id = 2;
    repeated ItemDetails items = 3;
    string shipDate = 4;
    string status = 5    ;
    bool complete = 6;
    string destinationAddress = 7;
}

// Data structure for storing item details

message ItemDetails {
    int64 itemID = 1;
    double volume = 2;
}

//Messages

message GetOrderServiceRequest {
    string order_id = 1;
}

message GetOrderServiceResponse {
    int32 response_code = 1;
    optional OrderDetails order = 2;
    /*

    0 - Success
    1 - Order not found

    */
}


message GetOrdersServiceRequest {
    string user_id = 1;
}

message GetOrdersServiceResponse {
    int32 response_code = 1;
    repeated OrderDetails orders = 2;

    /*

    0 - Success
    1 - User not found

    */
}


message CreateOrderServiceRequest {
    string user_id = 1;
    repeated ItemDetails items = 2;
    string destinationAddress = 3;
}

message CreateOrderServiceResponse {
    int32 response_code = 1;
    optional string order_id = 2;

    /*

    0 - Success
    1 - Order creation failed

    */
}

// Order service
service Order {
    rpc GetOrder (GetOrderServiceRequest) returns (GetOrderServiceResponse);
    // Returns the details of a specific order by its ID

    rpc GetOrders (GetOrdersServiceRequest) returns (GetOrdersServiceResponse);
    // Returns all orders for a given user

    rpc CreateOrder (CreateOrderServiceRequest) returns (CreateOrderServiceResponse);
    // Creates a new empty order with no items and sets it as the current order for the user
}