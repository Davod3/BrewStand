# THIS CODE WAS AUTO GENERATED BY SWAGGER EDITOR

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from models.base_model_ import Model
from utils import util


class User(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, username: str=None, password: str=None, address: str=None):  # noqa: E501
        """User - a model defined in Swagger

        :param username: The username of this User.  # noqa: E501
        :type username: str
        :param password: The password of this User.  # noqa: E501
        :type password: str
        :param address: The address of this User.  # noqa: E501
        :type address: str
        """
        self.swagger_types = {
            'username': str,
            'password': str,
            'address': str
        }

        self.attribute_map = {
            'username': 'username',
            'password': 'password',
            'address': 'address'
        }
        self._username = username
        self._password = password
        self._address = address

    @classmethod
    def from_dict(cls, dikt) -> 'User':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The User of this User.  # noqa: E501
        :rtype: User
        """
        return util.deserialize_model(dikt, cls)

    @property
    def username(self) -> str:
        """Gets the username of this User.

        The username used to refer to the user. Must be unique  # noqa: E501

        :return: The username of this User.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username: str):
        """Sets the username of this User.

        The username used to refer to the user. Must be unique  # noqa: E501

        :param username: The username of this User.
        :type username: str
        """

        self._username = username

    @property
    def password(self) -> str:
        """Gets the password of this User.

        The password the user intends to use for authentication  # noqa: E501

        :return: The password of this User.
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password: str):
        """Sets the password of this User.

        The password the user intends to use for authentication  # noqa: E501

        :param password: The password of this User.
        :type password: str
        """

        self._password = password

    @property
    def address(self) -> str:
        """Gets the address of this User.

        The address to where orders will be sent.  # noqa: E501

        :return: The address of this User.
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address: str):
        """Sets the address of this User.

        The address to where orders will be sent.  # noqa: E501

        :param address: The address of this User.
        :type address: str
        """

        self._address = address
